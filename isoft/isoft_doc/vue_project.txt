#################################################################################################################################

搭建开发环境及构建项目

1、进入Node.js官网,选择下载并安装Node.js.安装过程只需要点击"下一步"即可

2、验证Node.js是否安装好,在windows下,win+r召唤出运行窗口,输入cmd打开命令行窗口.输入node -v即可得到对应的Node.js版本

3、npm包管理器是集成在Node.js中了,所以在安装Node.js的时候就已经自带了npm.输入npm -v可得到npm的版本.

4、注意npm的版本需要在3.0.0以上版本,所以,如果npm的版本小于3.0.0,输入以下命令更新npm至最新版本.npm -g install npm

5、安装cnpm,在命令行中输入以下内容等待安装 npm install -g cnpm --registry=https://registry.npm.taobao.org

6、cpnm全局安装vue-cli,在命令行中运行以下命令然后等待安装 cnpm install -g vue-cli

7、新建项目,cd vueProjects跳到此目录下,在此目录下创建一个基于 webpack 模板的新项目,即在cmd中输入以下命令：
vue init webpack my-vue-project
vue init webpack my-vue-project意思是初始化一个项目,利用的是webpack打包和压缩,此项目命名为my-vue-project.
这样,my-vue-project文件夹就自动生成刚刚在指定的目录中,在此过程中,需要输入项目名、描述、作者等.
需要使用命令先定位到my-vue-project目录下,然后输入命令
cnpm install
安装项目所需的依赖包资源 cnpm install,可以看到my-vue-project文件夹下多了一个node_modules文件

8、运行项目,使用命令npm run dev 运行项目,npm run dev,项目运行成功后浏览器会自动打开localhost:8080呈现以下页面,
至此,vue的脚手架工具已经搭建完成,接下来具体项目的开发只需在src目录下进行

#################################################################################################################################

查看 npm 已安装的包: npm list -g --depth 0

#################################################################################################################################

vuejs npm chromedriver 报错
# 全局安装 vue-cli
$ npm install -g vue-cli
# 创建一个基于 "webpack" 模板的新项目
$ vue init webpack my-project
# 安装依赖,走你
$ cd my-project
$ npm install
$ npm run dev

用vue建项目后,npm install 发现老卡在chromedriver 报错上,后来网上查了下,发现了解决办法
原因一般是下载源被封了,我们连接淘宝的下载源下载:
npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver

#################################################################################################################################

解决 npm run dev 不能自动打开浏览器
首先找到config/index.js文件,在文件module.exports配置中找到autoOpenBrowser,将autoOpenBrowser修改为true

#################################################################################################################################

vue.js如何更改默认端口号8080为指定端口
首先找到config/index.js文件,在文件module.exports配置中找到autoOpenBrowser,将port修改为指定端口

#################################################################################################################################

安装 stylus
npm install stylus stylus-loader --save-dev

同时安装 sylus 插件、vuejs插件

#################################################################################################################################

npm install jquery --save-dev
npm install popper.js --save-dev
npm install bootstrap -–save-dev

找到build文件夹下的webpack.base.conf.js文件打开,修改配置:
1、加入webpack对象:
var webpack=require('webpack');
2、在module.exports里面加入:
plugins: [
  new webpack.ProvidePlugin({
    $:"jquery",
    jQuery:"jquery",
    "windows.jQuery":"jquery",
    Popper: ['popper.js', 'default']             # bootstrap 依赖 popper.js
  })
]
3、在入口文件main.js中加入
import $ from 'jquery'

npm install bootstrap@3.3.0 -–save-dev   # 可以指定版本
在main.js中添加如下内容
import 'bootstrap/dist/css/bootstrap.min.css'
import 'bootstrap/dist/js/bootstrap.min.js'

#################################################################################################################################

npm install iview --save

引入 iView 一般在 webpack 入口页面 main.js 中如下配置

import iView from 'iview'
import 'iview/dist/styles/iview.css'

Vue.use(iView);

#################################################################################################################################

npm install axios --save-dev

在 config/index.js 中配置 proxyTable
module.exports = {
  dev: {

    // Paths
    assetsSubDirectory: 'static',
    assetsPublicPath: '/',
    proxyTable: {
      '/api': { // 匹配所有以 '/api'开头的请求路径
        target: 'http://localhost:4000', // 代理目标的基础路径
        changeOrigin: true, // 支持跨域
        pathRewrite: {// 重写路径: 去掉路径中开头的'/api'
          '^/api': ''
        }
      }
    },

#################################################################################################################################

background: url("../../../assets/search.png") 50% 50% no-repeat; 引入设置
1、在webpack.prod.conf.js文件里output里面添加：publicPath:'./'
2、在utils.js文件里添加 publicPath:'../../'
3、在config/index.js文件里，添加assetsPublicPath:'./'

#################################################################################################################################

# vue-markdown编辑器
npm install mavon-editor --save

# 使用marked将markdown语法解析成html并且高亮代码
安装marked插件
npm install marked --save
npm install highlight.js


